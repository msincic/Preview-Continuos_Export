{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/b0829305-00e3-4655-a84d-e0094f10a8ec')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/b0829305-00e3-4655-a84d-e0094f10a8ec')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2023-02-01-preview",
      "properties": {
        "displayName": "Abnormal Port to Protocol",
        "description": "Identifies communication for well known protocol over a non-standard port based on learning period activity. This can indicate malicious communication (C2) or exfiltration by attackers trying to communicate over known ports (22:SSH, 80:HTTP) but don't use the known protocol headers to match the port number.\n\nConfigurable Parameters:\n\n- Learning period time - learning period for protocol learning in days. Default is set to 7.",
        "alertDetailsOverride": null,
        "customDetails": {
          "Maquina": "URLCustomEntity"
        },
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ]
          },
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "columnName": "srcip",
                "identifier": "HostName"
              }
            ]
          },
          {
            "entityType": "AzureResource",
            "fieldMappings": [
              {
                "columnName": "URLCustomEntity",
                "identifier": "ResourceId"
              }
            ]
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "SingleAlert"
        },
        "incidentConfiguration": {
          "createIncident": true,
          "groupingConfiguration": {
            "enabled": false,
            "groupByAlertDetails": [],
            "groupByCustomDetails": [],
            "groupByEntities": [],
            "lookbackDuration": "PT5M",
            "matchingMethod": "AllEntities",
            "reopenClosedIncident": false
          }
        },
        "query": "let LearningPeriod = 7d;\nlet RunTime = 1d;\nlet StartLearningPeriod = LearningPeriod + RunTime;\nlet EndRunTime = RunTime - 1d;\nlet LearningPortToProtocol = (AzureDiagnostics\n    | where OperationName == \"AzureFirewallApplicationRuleLog\"\n    | parse msg_s with protocol \" request from \" srcip \":\" srcport \" to \" dsturl \":\" dstport \".\" *\n    | where isnotempty(dstport)\n    | where TimeGenerated between (ago(StartLearningPeriod) .. ago(RunTime))\n    | summarize LearningTimeCount = count() by LearningTimeDstPort = dstport, LearningTimeProtocol = protocol, srcip, dsturl);\nlet AlertTimePortToProtocol = (AzureDiagnostics\n    | where OperationName == \"AzureFirewallApplicationRuleLog\"\n    | parse msg_s with protocol \" request from \" srcip \":\" srcport \" to \" dsturl \":\" dstport \".\" *\n    | where isnotempty(dstport)\n    | where TimeGenerated between (ago(RunTime) .. ago(EndRunTime))\n    | summarize AlertTimeCount = count() by AlertTimeDstPort = dstport, AlertTimeProtocol = protocol);\nAlertTimePortToProtocol\n| join kind=leftouter (LearningPortToProtocol) on $left.AlertTimeDstPort == $right.LearningTimeDstPort\n| where LearningTimeProtocol != AlertTimeProtocol\n| where AlertTimeDstPort != 443\n| extend IPCustomEntity = srcip, URLCustomEntity = dsturl\n",
        "queryPeriod": "P1D",
        "queryFrequency": "PT12H",
        "sentinelEntitiesMappings": null,
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "tactics": [
          "DefenseEvasion",
          "Exfiltration",
          "CommandAndControl"
        ],
        "techniques": [],
        "templateVersion": null,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 10,
        "alertRuleTemplateName": null,
        "enabled": true
      }
    }
  ]
}